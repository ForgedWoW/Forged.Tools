// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: bgs/low/pb/client/game_utilities_service.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Bgs.Protocol.GameUtilities.V1 {

  /// <summary>Holder for reflection information generated from bgs/low/pb/client/game_utilities_service.proto</summary>
  public static partial class GameUtilitiesServiceReflection {

    #region Descriptor
    /// <summary>File descriptor for bgs/low/pb/client/game_utilities_service.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GameUtilitiesServiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ci5iZ3MvbG93L3BiL2NsaWVudC9nYW1lX3V0aWxpdGllc19zZXJ2aWNlLnBy",
            "b3RvEh5iZ3MucHJvdG9jb2wuZ2FtZV91dGlsaXRpZXMudjEaJ2Jncy9sb3cv",
            "cGIvY2xpZW50L2F0dHJpYnV0ZV90eXBlcy5wcm90bxokYmdzL2xvdy9wYi9j",
            "bGllbnQvZW50aXR5X3R5cGVzLnByb3RvGixiZ3MvbG93L3BiL2NsaWVudC9n",
            "YW1lX3V0aWxpdGllc190eXBlcy5wcm90bxohYmdzL2xvdy9wYi9jbGllbnQv",
            "cnBjX3R5cGVzLnByb3RvGjliZ3MvbG93L3BiL2NsaWVudC9nbG9iYWxfZXh0",
            "ZW5zaW9ucy9tZXNzYWdlX29wdGlvbnMucHJvdG8aN2Jncy9sb3cvcGIvY2xp",
            "ZW50L2dsb2JhbF9leHRlbnNpb25zL2ZpZWxkX29wdGlvbnMucHJvdG8aOGJn",
            "cy9sb3cvcGIvY2xpZW50L2dsb2JhbF9leHRlbnNpb25zL21ldGhvZF9vcHRp",
            "b25zLnByb3RvGjliZ3MvbG93L3BiL2NsaWVudC9nbG9iYWxfZXh0ZW5zaW9u",
            "cy9zZXJ2aWNlX29wdGlvbnMucHJvdG8inQIKDUNsaWVudFJlcXVlc3QSKgoJ",
            "YXR0cmlidXRlGAEgAygLMhcuYmdzLnByb3RvY29sLkF0dHJpYnV0ZRIpCgRo",
            "b3N0GAIgASgLMhcuYmdzLnByb3RvY29sLlByb2Nlc3NJZEICGAESKgoKYWNj",
            "b3VudF9pZBgDIAEoCzIWLmJncy5wcm90b2NvbC5FbnRpdHlJZBIvCg9nYW1l",
            "X2FjY291bnRfaWQYBCABKAsyFi5iZ3MucHJvdG9jb2wuRW50aXR5SWQSDwoH",
            "cHJvZ3JhbRgFIAEoBxI/CgtjbGllbnRfaW5mbxgGIAEoCzIqLmJncy5wcm90",
            "b2NvbC5nYW1lX3V0aWxpdGllcy52MS5DbGllbnRJbmZvOgaC+SsCCAEiPAoO",
            "Q2xpZW50UmVzcG9uc2USKgoJYXR0cmlidXRlGAEgAygLMhcuYmdzLnByb3Rv",
            "Y29sLkF0dHJpYnV0ZSJ3Cg1TZXJ2ZXJSZXF1ZXN0EioKCWF0dHJpYnV0ZRgB",
            "IAMoCzIXLmJncy5wcm90b2NvbC5BdHRyaWJ1dGUSDwoHcHJvZ3JhbRgCIAIo",
            "BxIpCgRob3N0GAMgASgLMhcuYmdzLnByb3RvY29sLlByb2Nlc3NJZEICGAEi",
            "PAoOU2VydmVyUmVzcG9uc2USKgoJYXR0cmlidXRlGAEgAygLMhcuYmdzLnBy",
            "b3RvY29sLkF0dHJpYnV0ZSLLAQodUHJlc2VuY2VDaGFubmVsQ3JlYXRlZFJl",
            "cXVlc3QSIgoCaWQYASACKAsyFi5iZ3MucHJvdG9jb2wuRW50aXR5SWQSLwoP",
            "Z2FtZV9hY2NvdW50X2lkGAMgASgLMhYuYmdzLnByb3RvY29sLkVudGl0eUlk",
            "EioKCmFjY291bnRfaWQYBCABKAsyFi5iZ3MucHJvdG9jb2wuRW50aXR5SWQS",
            "KQoEaG9zdBgFIAEoCzIXLmJncy5wcm90b2NvbC5Qcm9jZXNzSWRCAhgBIo8B",
            "Ch1HYW1lQWNjb3VudE9ubGluZU5vdGlmaWNhdGlvbhIvCg9nYW1lX2FjY291",
            "bnRfaWQYASACKAsyFi5iZ3MucHJvdG9jb2wuRW50aXR5SWQSKQoEaG9zdBgC",
            "IAEoCzIXLmJncy5wcm90b2NvbC5Qcm9jZXNzSWRCAhgBEhIKCnNlc3Npb25f",
            "aWQYAyABKAkikAEKHkdhbWVBY2NvdW50T2ZmbGluZU5vdGlmaWNhdGlvbhIv",
            "Cg9nYW1lX2FjY291bnRfaWQYASACKAsyFi5iZ3MucHJvdG9jb2wuRW50aXR5",
            "SWQSKQoEaG9zdBgCIAEoCzIXLmJncy5wcm90b2NvbC5Qcm9jZXNzSWRCAhgB",
            "EhIKCnNlc3Npb25faWQYAyABKAkikgEKH0dldEFsbFZhbHVlc0ZvckF0dHJp",
            "YnV0ZVJlcXVlc3QSLAoNYXR0cmlidXRlX2tleRgBIAEoCUIVivkrBiIECgII",
            "AYr5KwciBQoDEIACEigKCGFnZW50X2lkGAIgASgLMhYuYmdzLnByb3RvY29s",
            "LkVudGl0eUlkEg8KB3Byb2dyYW0YBSABKAc6BoL5KwIIASJSCiBHZXRBbGxW",
            "YWx1ZXNGb3JBdHRyaWJ1dGVSZXNwb25zZRIuCg9hdHRyaWJ1dGVfdmFsdWUY",
            "ASADKAsyFS5iZ3MucHJvdG9jb2wuVmFyaWFudCJhChhSZWdpc3RlclV0aWxp",
            "dGllc1JlcXVlc3QSKgoJYXR0cmlidXRlGAEgAygLMhcuYmdzLnByb3RvY29s",
            "LkF0dHJpYnV0ZRIZCgdwcm9ncmFtGAIgASgHQgiK+SsEEgIQACIuChlSZWdp",
            "c3RlclV0aWxpdGllc1Jlc3BvbnNlEhEKCWNsaWVudF9pZBgBIAEoCSIcChpV",
            "bnJlZ2lzdGVyVXRpbGl0aWVzUmVxdWVzdDKOCQoUR2FtZVV0aWxpdGllc1Nl",
            "cnZpY2USfQoUUHJvY2Vzc0NsaWVudFJlcXVlc3QSLS5iZ3MucHJvdG9jb2wu",
            "Z2FtZV91dGlsaXRpZXMudjEuQ2xpZW50UmVxdWVzdBouLmJncy5wcm90b2Nv",
            "bC5nYW1lX3V0aWxpdGllcy52MS5DbGllbnRSZXNwb25zZSIGgvkrAggBEnUK",
            "FlByZXNlbmNlQ2hhbm5lbENyZWF0ZWQSPS5iZ3MucHJvdG9jb2wuZ2FtZV91",
            "dGlsaXRpZXMudjEuUHJlc2VuY2VDaGFubmVsQ3JlYXRlZFJlcXVlc3QaFC5i",
            "Z3MucHJvdG9jb2wuTm9EYXRhIgaC+SsCCAISfQoUUHJvY2Vzc1NlcnZlclJl",
            "cXVlc3QSLS5iZ3MucHJvdG9jb2wuZ2FtZV91dGlsaXRpZXMudjEuU2VydmVy",
            "UmVxdWVzdBouLmJncy5wcm90b2NvbC5nYW1lX3V0aWxpdGllcy52MS5TZXJ2",
            "ZXJSZXNwb25zZSIGgvkrAggGEncKE09uR2FtZUFjY291bnRPbmxpbmUSPS5i",
            "Z3MucHJvdG9jb2wuZ2FtZV91dGlsaXRpZXMudjEuR2FtZUFjY291bnRPbmxp",
            "bmVOb3RpZmljYXRpb24aGS5iZ3MucHJvdG9jb2wuTk9fUkVTUE9OU0UiBoL5",
            "KwIIBxJ5ChRPbkdhbWVBY2NvdW50T2ZmbGluZRI+LmJncy5wcm90b2NvbC5n",
            "YW1lX3V0aWxpdGllcy52MS5HYW1lQWNjb3VudE9mZmxpbmVOb3RpZmljYXRp",
            "b24aGS5iZ3MucHJvdG9jb2wuTk9fUkVTUE9OU0UiBoL5KwIICBKlAQoYR2V0",
            "QWxsVmFsdWVzRm9yQXR0cmlidXRlEj8uYmdzLnByb3RvY29sLmdhbWVfdXRp",
            "bGl0aWVzLnYxLkdldEFsbFZhbHVlc0ZvckF0dHJpYnV0ZVJlcXVlc3QaQC5i",
            "Z3MucHJvdG9jb2wuZ2FtZV91dGlsaXRpZXMudjEuR2V0QWxsVmFsdWVzRm9y",
            "QXR0cmlidXRlUmVzcG9uc2UiBoL5KwIIChKWAQoRUmVnaXN0ZXJVdGlsaXRp",
            "ZXMSOC5iZ3MucHJvdG9jb2wuZ2FtZV91dGlsaXRpZXMudjEuUmVnaXN0ZXJV",
            "dGlsaXRpZXNSZXF1ZXN0GjkuYmdzLnByb3RvY29sLmdhbWVfdXRpbGl0aWVz",
            "LnYxLlJlZ2lzdGVyVXRpbGl0aWVzUmVzcG9uc2UiDIL5KwIIC4L5KwIQAxJ6",
            "ChNVbnJlZ2lzdGVyVXRpbGl0aWVzEjouYmdzLnByb3RvY29sLmdhbWVfdXRp",
            "bGl0aWVzLnYxLlVucmVnaXN0ZXJVdGlsaXRpZXNSZXF1ZXN0GhkuYmdzLnBy",
            "b3RvY29sLk5PX1JFU1BPTlNFIgyC+SsCCAyC+SsCEAMaUIL5KywKKmJuZXQu",
            "cHJvdG9jb2wuZ2FtZV91dGlsaXRpZXMuR2FtZVV0aWxpdGllc4L5KxAqDmdh",
            "bWVfdXRpbGl0aWVzivkrAggBivkrAhABQkIKH2JuZXQucHJvdG9jb2wuZ2Ft",
            "ZV91dGlsaXRpZXMudjFCGUdhbWVVdGlsaXRpZXNTZXJ2aWNlUHJvdG+AAQCI",
            "AQE="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Bgs.Protocol.AttributeTypesReflection.Descriptor, global::Bgs.Protocol.EntityTypesReflection.Descriptor, global::Bgs.Protocol.GameUtilities.V1.GameUtilitiesTypesReflection.Descriptor, global::Bgs.Protocol.RpcTypesReflection.Descriptor, global::Bgs.Protocol.MessageOptionsReflection.Descriptor, global::Bgs.Protocol.FieldOptionsReflection.Descriptor, global::Bgs.Protocol.MethodOptionsReflection.Descriptor, global::Bgs.Protocol.ServiceOptionsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.GameUtilities.V1.ClientRequest), global::Bgs.Protocol.GameUtilities.V1.ClientRequest.Parser, new[]{ "Attribute", "Host", "AccountId", "GameAccountId", "Program", "ClientInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.GameUtilities.V1.ClientResponse), global::Bgs.Protocol.GameUtilities.V1.ClientResponse.Parser, new[]{ "Attribute" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.GameUtilities.V1.ServerRequest), global::Bgs.Protocol.GameUtilities.V1.ServerRequest.Parser, new[]{ "Attribute", "Program", "Host" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.GameUtilities.V1.ServerResponse), global::Bgs.Protocol.GameUtilities.V1.ServerResponse.Parser, new[]{ "Attribute" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.GameUtilities.V1.PresenceChannelCreatedRequest), global::Bgs.Protocol.GameUtilities.V1.PresenceChannelCreatedRequest.Parser, new[]{ "Id", "GameAccountId", "AccountId", "Host" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.GameUtilities.V1.GameAccountOnlineNotification), global::Bgs.Protocol.GameUtilities.V1.GameAccountOnlineNotification.Parser, new[]{ "GameAccountId", "Host", "SessionId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.GameUtilities.V1.GameAccountOfflineNotification), global::Bgs.Protocol.GameUtilities.V1.GameAccountOfflineNotification.Parser, new[]{ "GameAccountId", "Host", "SessionId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.GameUtilities.V1.GetAllValuesForAttributeRequest), global::Bgs.Protocol.GameUtilities.V1.GetAllValuesForAttributeRequest.Parser, new[]{ "AttributeKey", "AgentId", "Program" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.GameUtilities.V1.GetAllValuesForAttributeResponse), global::Bgs.Protocol.GameUtilities.V1.GetAllValuesForAttributeResponse.Parser, new[]{ "AttributeValue" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.GameUtilities.V1.RegisterUtilitiesRequest), global::Bgs.Protocol.GameUtilities.V1.RegisterUtilitiesRequest.Parser, new[]{ "Attribute", "Program" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.GameUtilities.V1.RegisterUtilitiesResponse), global::Bgs.Protocol.GameUtilities.V1.RegisterUtilitiesResponse.Parser, new[]{ "ClientId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.GameUtilities.V1.UnregisterUtilitiesRequest), global::Bgs.Protocol.GameUtilities.V1.UnregisterUtilitiesRequest.Parser, null, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ClientRequest : pb::IMessage<ClientRequest> {
    private static readonly pb::MessageParser<ClientRequest> _parser = new pb::MessageParser<ClientRequest>(() => new ClientRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClientRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.GameUtilities.V1.GameUtilitiesServiceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientRequest(ClientRequest other) : this() {
      _hasBits0 = other._hasBits0;
      attribute_ = other.attribute_.Clone();
      host_ = other.HasHost ? other.host_.Clone() : null;
      accountId_ = other.HasAccountId ? other.accountId_.Clone() : null;
      gameAccountId_ = other.HasGameAccountId ? other.gameAccountId_.Clone() : null;
      program_ = other.program_;
      clientInfo_ = other.HasClientInfo ? other.clientInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientRequest Clone() {
      return new ClientRequest(this);
    }

    /// <summary>Field number for the "attribute" field.</summary>
    public const int AttributeFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Bgs.Protocol.Attribute> _repeated_attribute_codec
        = pb::FieldCodec.ForMessage(10, global::Bgs.Protocol.Attribute.Parser);
    private readonly pbc::RepeatedField<global::Bgs.Protocol.Attribute> attribute_ = new pbc::RepeatedField<global::Bgs.Protocol.Attribute>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Bgs.Protocol.Attribute> Attribute {
      get { return attribute_; }
    }

    /// <summary>Field number for the "host" field.</summary>
    public const int HostFieldNumber = 2;
    private global::Bgs.Protocol.ProcessId host_;
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.ProcessId Host {
      get { return host_; }
      set {
        host_ = value;
      }
    }
    /// <summary>Gets whether the host field is set</summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasHost {
      get { return host_ != null; }
    }
    /// <summary>Clears the value of the host field</summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearHost() {
      host_ = null;
    }

    /// <summary>Field number for the "account_id" field.</summary>
    public const int AccountIdFieldNumber = 3;
    private global::Bgs.Protocol.EntityId accountId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.EntityId AccountId {
      get { return accountId_; }
      set {
        accountId_ = value;
      }
    }
    /// <summary>Gets whether the account_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAccountId {
      get { return accountId_ != null; }
    }
    /// <summary>Clears the value of the account_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAccountId() {
      accountId_ = null;
    }

    /// <summary>Field number for the "game_account_id" field.</summary>
    public const int GameAccountIdFieldNumber = 4;
    private global::Bgs.Protocol.EntityId gameAccountId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.EntityId GameAccountId {
      get { return gameAccountId_; }
      set {
        gameAccountId_ = value;
      }
    }
    /// <summary>Gets whether the game_account_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasGameAccountId {
      get { return gameAccountId_ != null; }
    }
    /// <summary>Clears the value of the game_account_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearGameAccountId() {
      gameAccountId_ = null;
    }

    /// <summary>Field number for the "program" field.</summary>
    public const int ProgramFieldNumber = 5;
    private readonly static uint ProgramDefaultValue = 0;

    private uint program_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Program {
      get { if ((_hasBits0 & 1) != 0) { return program_; } else { return ProgramDefaultValue; } }
      set {
        _hasBits0 |= 1;
        program_ = value;
      }
    }
    /// <summary>Gets whether the "program" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasProgram {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "program" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearProgram() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "client_info" field.</summary>
    public const int ClientInfoFieldNumber = 6;
    private global::Bgs.Protocol.GameUtilities.V1.ClientInfo clientInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.GameUtilities.V1.ClientInfo ClientInfo {
      get { return clientInfo_; }
      set {
        clientInfo_ = value;
      }
    }
    /// <summary>Gets whether the client_info field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasClientInfo {
      get { return clientInfo_ != null; }
    }
    /// <summary>Clears the value of the client_info field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearClientInfo() {
      clientInfo_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClientRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClientRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!attribute_.Equals(other.attribute_)) return false;
      if (!object.Equals(Host, other.Host)) return false;
      if (!object.Equals(AccountId, other.AccountId)) return false;
      if (!object.Equals(GameAccountId, other.GameAccountId)) return false;
      if (Program != other.Program) return false;
      if (!object.Equals(ClientInfo, other.ClientInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= attribute_.GetHashCode();
      if (HasHost) hash ^= Host.GetHashCode();
      if (HasAccountId) hash ^= AccountId.GetHashCode();
      if (HasGameAccountId) hash ^= GameAccountId.GetHashCode();
      if (HasProgram) hash ^= Program.GetHashCode();
      if (HasClientInfo) hash ^= ClientInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      attribute_.WriteTo(output, _repeated_attribute_codec);
      if (HasHost) {
        output.WriteRawTag(18);
        output.WriteMessage(Host);
      }
      if (HasAccountId) {
        output.WriteRawTag(26);
        output.WriteMessage(AccountId);
      }
      if (HasGameAccountId) {
        output.WriteRawTag(34);
        output.WriteMessage(GameAccountId);
      }
      if (HasProgram) {
        output.WriteRawTag(45);
        output.WriteFixed32(Program);
      }
      if (HasClientInfo) {
        output.WriteRawTag(50);
        output.WriteMessage(ClientInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += attribute_.CalculateSize(_repeated_attribute_codec);
      if (HasHost) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Host);
      }
      if (HasAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AccountId);
      }
      if (HasGameAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GameAccountId);
      }
      if (HasProgram) {
        size += 1 + 4;
      }
      if (HasClientInfo) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ClientInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClientRequest other) {
      if (other == null) {
        return;
      }
      attribute_.Add(other.attribute_);
      if (other.HasHost) {
        if (!HasHost) {
          Host = new global::Bgs.Protocol.ProcessId();
        }
        Host.MergeFrom(other.Host);
      }
      if (other.HasAccountId) {
        if (!HasAccountId) {
          AccountId = new global::Bgs.Protocol.EntityId();
        }
        AccountId.MergeFrom(other.AccountId);
      }
      if (other.HasGameAccountId) {
        if (!HasGameAccountId) {
          GameAccountId = new global::Bgs.Protocol.EntityId();
        }
        GameAccountId.MergeFrom(other.GameAccountId);
      }
      if (other.HasProgram) {
        Program = other.Program;
      }
      if (other.HasClientInfo) {
        if (!HasClientInfo) {
          ClientInfo = new global::Bgs.Protocol.GameUtilities.V1.ClientInfo();
        }
        ClientInfo.MergeFrom(other.ClientInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            attribute_.AddEntriesFrom(input, _repeated_attribute_codec);
            break;
          }
          case 18: {
            if (!HasHost) {
              Host = new global::Bgs.Protocol.ProcessId();
            }
            input.ReadMessage(Host);
            break;
          }
          case 26: {
            if (!HasAccountId) {
              AccountId = new global::Bgs.Protocol.EntityId();
            }
            input.ReadMessage(AccountId);
            break;
          }
          case 34: {
            if (!HasGameAccountId) {
              GameAccountId = new global::Bgs.Protocol.EntityId();
            }
            input.ReadMessage(GameAccountId);
            break;
          }
          case 45: {
            Program = input.ReadFixed32();
            break;
          }
          case 50: {
            if (!HasClientInfo) {
              ClientInfo = new global::Bgs.Protocol.GameUtilities.V1.ClientInfo();
            }
            input.ReadMessage(ClientInfo);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ClientResponse : pb::IMessage<ClientResponse> {
    private static readonly pb::MessageParser<ClientResponse> _parser = new pb::MessageParser<ClientResponse>(() => new ClientResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClientResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.GameUtilities.V1.GameUtilitiesServiceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientResponse(ClientResponse other) : this() {
      attribute_ = other.attribute_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientResponse Clone() {
      return new ClientResponse(this);
    }

    /// <summary>Field number for the "attribute" field.</summary>
    public const int AttributeFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Bgs.Protocol.Attribute> _repeated_attribute_codec
        = pb::FieldCodec.ForMessage(10, global::Bgs.Protocol.Attribute.Parser);
    private readonly pbc::RepeatedField<global::Bgs.Protocol.Attribute> attribute_ = new pbc::RepeatedField<global::Bgs.Protocol.Attribute>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Bgs.Protocol.Attribute> Attribute {
      get { return attribute_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClientResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClientResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!attribute_.Equals(other.attribute_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= attribute_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      attribute_.WriteTo(output, _repeated_attribute_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += attribute_.CalculateSize(_repeated_attribute_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClientResponse other) {
      if (other == null) {
        return;
      }
      attribute_.Add(other.attribute_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            attribute_.AddEntriesFrom(input, _repeated_attribute_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ServerRequest : pb::IMessage<ServerRequest> {
    private static readonly pb::MessageParser<ServerRequest> _parser = new pb::MessageParser<ServerRequest>(() => new ServerRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ServerRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.GameUtilities.V1.GameUtilitiesServiceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerRequest(ServerRequest other) : this() {
      _hasBits0 = other._hasBits0;
      attribute_ = other.attribute_.Clone();
      program_ = other.program_;
      host_ = other.HasHost ? other.host_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerRequest Clone() {
      return new ServerRequest(this);
    }

    /// <summary>Field number for the "attribute" field.</summary>
    public const int AttributeFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Bgs.Protocol.Attribute> _repeated_attribute_codec
        = pb::FieldCodec.ForMessage(10, global::Bgs.Protocol.Attribute.Parser);
    private readonly pbc::RepeatedField<global::Bgs.Protocol.Attribute> attribute_ = new pbc::RepeatedField<global::Bgs.Protocol.Attribute>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Bgs.Protocol.Attribute> Attribute {
      get { return attribute_; }
    }

    /// <summary>Field number for the "program" field.</summary>
    public const int ProgramFieldNumber = 2;
    private readonly static uint ProgramDefaultValue = 0;

    private uint program_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Program {
      get { if ((_hasBits0 & 1) != 0) { return program_; } else { return ProgramDefaultValue; } }
      set {
        _hasBits0 |= 1;
        program_ = value;
      }
    }
    /// <summary>Gets whether the "program" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasProgram {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "program" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearProgram() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "host" field.</summary>
    public const int HostFieldNumber = 3;
    private global::Bgs.Protocol.ProcessId host_;
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.ProcessId Host {
      get { return host_; }
      set {
        host_ = value;
      }
    }
    /// <summary>Gets whether the host field is set</summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasHost {
      get { return host_ != null; }
    }
    /// <summary>Clears the value of the host field</summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearHost() {
      host_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ServerRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ServerRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!attribute_.Equals(other.attribute_)) return false;
      if (Program != other.Program) return false;
      if (!object.Equals(Host, other.Host)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= attribute_.GetHashCode();
      if (HasProgram) hash ^= Program.GetHashCode();
      if (HasHost) hash ^= Host.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      attribute_.WriteTo(output, _repeated_attribute_codec);
      if (HasProgram) {
        output.WriteRawTag(21);
        output.WriteFixed32(Program);
      }
      if (HasHost) {
        output.WriteRawTag(26);
        output.WriteMessage(Host);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += attribute_.CalculateSize(_repeated_attribute_codec);
      if (HasProgram) {
        size += 1 + 4;
      }
      if (HasHost) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Host);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ServerRequest other) {
      if (other == null) {
        return;
      }
      attribute_.Add(other.attribute_);
      if (other.HasProgram) {
        Program = other.Program;
      }
      if (other.HasHost) {
        if (!HasHost) {
          Host = new global::Bgs.Protocol.ProcessId();
        }
        Host.MergeFrom(other.Host);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            attribute_.AddEntriesFrom(input, _repeated_attribute_codec);
            break;
          }
          case 21: {
            Program = input.ReadFixed32();
            break;
          }
          case 26: {
            if (!HasHost) {
              Host = new global::Bgs.Protocol.ProcessId();
            }
            input.ReadMessage(Host);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ServerResponse : pb::IMessage<ServerResponse> {
    private static readonly pb::MessageParser<ServerResponse> _parser = new pb::MessageParser<ServerResponse>(() => new ServerResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ServerResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.GameUtilities.V1.GameUtilitiesServiceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerResponse(ServerResponse other) : this() {
      attribute_ = other.attribute_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerResponse Clone() {
      return new ServerResponse(this);
    }

    /// <summary>Field number for the "attribute" field.</summary>
    public const int AttributeFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Bgs.Protocol.Attribute> _repeated_attribute_codec
        = pb::FieldCodec.ForMessage(10, global::Bgs.Protocol.Attribute.Parser);
    private readonly pbc::RepeatedField<global::Bgs.Protocol.Attribute> attribute_ = new pbc::RepeatedField<global::Bgs.Protocol.Attribute>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Bgs.Protocol.Attribute> Attribute {
      get { return attribute_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ServerResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ServerResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!attribute_.Equals(other.attribute_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= attribute_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      attribute_.WriteTo(output, _repeated_attribute_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += attribute_.CalculateSize(_repeated_attribute_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ServerResponse other) {
      if (other == null) {
        return;
      }
      attribute_.Add(other.attribute_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            attribute_.AddEntriesFrom(input, _repeated_attribute_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PresenceChannelCreatedRequest : pb::IMessage<PresenceChannelCreatedRequest> {
    private static readonly pb::MessageParser<PresenceChannelCreatedRequest> _parser = new pb::MessageParser<PresenceChannelCreatedRequest>(() => new PresenceChannelCreatedRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PresenceChannelCreatedRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.GameUtilities.V1.GameUtilitiesServiceReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PresenceChannelCreatedRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PresenceChannelCreatedRequest(PresenceChannelCreatedRequest other) : this() {
      id_ = other.HasId ? other.id_.Clone() : null;
      gameAccountId_ = other.HasGameAccountId ? other.gameAccountId_.Clone() : null;
      accountId_ = other.HasAccountId ? other.accountId_.Clone() : null;
      host_ = other.HasHost ? other.host_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PresenceChannelCreatedRequest Clone() {
      return new PresenceChannelCreatedRequest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private global::Bgs.Protocol.EntityId id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.EntityId Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }
    /// <summary>Gets whether the id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasId {
      get { return id_ != null; }
    }
    /// <summary>Clears the value of the id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearId() {
      id_ = null;
    }

    /// <summary>Field number for the "game_account_id" field.</summary>
    public const int GameAccountIdFieldNumber = 3;
    private global::Bgs.Protocol.EntityId gameAccountId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.EntityId GameAccountId {
      get { return gameAccountId_; }
      set {
        gameAccountId_ = value;
      }
    }
    /// <summary>Gets whether the game_account_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasGameAccountId {
      get { return gameAccountId_ != null; }
    }
    /// <summary>Clears the value of the game_account_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearGameAccountId() {
      gameAccountId_ = null;
    }

    /// <summary>Field number for the "account_id" field.</summary>
    public const int AccountIdFieldNumber = 4;
    private global::Bgs.Protocol.EntityId accountId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.EntityId AccountId {
      get { return accountId_; }
      set {
        accountId_ = value;
      }
    }
    /// <summary>Gets whether the account_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAccountId {
      get { return accountId_ != null; }
    }
    /// <summary>Clears the value of the account_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAccountId() {
      accountId_ = null;
    }

    /// <summary>Field number for the "host" field.</summary>
    public const int HostFieldNumber = 5;
    private global::Bgs.Protocol.ProcessId host_;
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.ProcessId Host {
      get { return host_; }
      set {
        host_ = value;
      }
    }
    /// <summary>Gets whether the host field is set</summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasHost {
      get { return host_ != null; }
    }
    /// <summary>Clears the value of the host field</summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearHost() {
      host_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PresenceChannelCreatedRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PresenceChannelCreatedRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Id, other.Id)) return false;
      if (!object.Equals(GameAccountId, other.GameAccountId)) return false;
      if (!object.Equals(AccountId, other.AccountId)) return false;
      if (!object.Equals(Host, other.Host)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasId) hash ^= Id.GetHashCode();
      if (HasGameAccountId) hash ^= GameAccountId.GetHashCode();
      if (HasAccountId) hash ^= AccountId.GetHashCode();
      if (HasHost) hash ^= Host.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasId) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (HasGameAccountId) {
        output.WriteRawTag(26);
        output.WriteMessage(GameAccountId);
      }
      if (HasAccountId) {
        output.WriteRawTag(34);
        output.WriteMessage(AccountId);
      }
      if (HasHost) {
        output.WriteRawTag(42);
        output.WriteMessage(Host);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Id);
      }
      if (HasGameAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GameAccountId);
      }
      if (HasAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AccountId);
      }
      if (HasHost) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Host);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PresenceChannelCreatedRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasId) {
        if (!HasId) {
          Id = new global::Bgs.Protocol.EntityId();
        }
        Id.MergeFrom(other.Id);
      }
      if (other.HasGameAccountId) {
        if (!HasGameAccountId) {
          GameAccountId = new global::Bgs.Protocol.EntityId();
        }
        GameAccountId.MergeFrom(other.GameAccountId);
      }
      if (other.HasAccountId) {
        if (!HasAccountId) {
          AccountId = new global::Bgs.Protocol.EntityId();
        }
        AccountId.MergeFrom(other.AccountId);
      }
      if (other.HasHost) {
        if (!HasHost) {
          Host = new global::Bgs.Protocol.ProcessId();
        }
        Host.MergeFrom(other.Host);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasId) {
              Id = new global::Bgs.Protocol.EntityId();
            }
            input.ReadMessage(Id);
            break;
          }
          case 26: {
            if (!HasGameAccountId) {
              GameAccountId = new global::Bgs.Protocol.EntityId();
            }
            input.ReadMessage(GameAccountId);
            break;
          }
          case 34: {
            if (!HasAccountId) {
              AccountId = new global::Bgs.Protocol.EntityId();
            }
            input.ReadMessage(AccountId);
            break;
          }
          case 42: {
            if (!HasHost) {
              Host = new global::Bgs.Protocol.ProcessId();
            }
            input.ReadMessage(Host);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GameAccountOnlineNotification : pb::IMessage<GameAccountOnlineNotification> {
    private static readonly pb::MessageParser<GameAccountOnlineNotification> _parser = new pb::MessageParser<GameAccountOnlineNotification>(() => new GameAccountOnlineNotification());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GameAccountOnlineNotification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.GameUtilities.V1.GameUtilitiesServiceReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameAccountOnlineNotification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameAccountOnlineNotification(GameAccountOnlineNotification other) : this() {
      gameAccountId_ = other.HasGameAccountId ? other.gameAccountId_.Clone() : null;
      host_ = other.HasHost ? other.host_.Clone() : null;
      sessionId_ = other.sessionId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameAccountOnlineNotification Clone() {
      return new GameAccountOnlineNotification(this);
    }

    /// <summary>Field number for the "game_account_id" field.</summary>
    public const int GameAccountIdFieldNumber = 1;
    private global::Bgs.Protocol.EntityId gameAccountId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.EntityId GameAccountId {
      get { return gameAccountId_; }
      set {
        gameAccountId_ = value;
      }
    }
    /// <summary>Gets whether the game_account_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasGameAccountId {
      get { return gameAccountId_ != null; }
    }
    /// <summary>Clears the value of the game_account_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearGameAccountId() {
      gameAccountId_ = null;
    }

    /// <summary>Field number for the "host" field.</summary>
    public const int HostFieldNumber = 2;
    private global::Bgs.Protocol.ProcessId host_;
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.ProcessId Host {
      get { return host_; }
      set {
        host_ = value;
      }
    }
    /// <summary>Gets whether the host field is set</summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasHost {
      get { return host_ != null; }
    }
    /// <summary>Clears the value of the host field</summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearHost() {
      host_ = null;
    }

    /// <summary>Field number for the "session_id" field.</summary>
    public const int SessionIdFieldNumber = 3;
    private readonly static string SessionIdDefaultValue = "";

    private string sessionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionId {
      get { return sessionId_ ?? SessionIdDefaultValue; }
      set {
        sessionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "session_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSessionId {
      get { return sessionId_ != null; }
    }
    /// <summary>Clears the value of the "session_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSessionId() {
      sessionId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GameAccountOnlineNotification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GameAccountOnlineNotification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(GameAccountId, other.GameAccountId)) return false;
      if (!object.Equals(Host, other.Host)) return false;
      if (SessionId != other.SessionId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasGameAccountId) hash ^= GameAccountId.GetHashCode();
      if (HasHost) hash ^= Host.GetHashCode();
      if (HasSessionId) hash ^= SessionId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasGameAccountId) {
        output.WriteRawTag(10);
        output.WriteMessage(GameAccountId);
      }
      if (HasHost) {
        output.WriteRawTag(18);
        output.WriteMessage(Host);
      }
      if (HasSessionId) {
        output.WriteRawTag(26);
        output.WriteString(SessionId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasGameAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GameAccountId);
      }
      if (HasHost) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Host);
      }
      if (HasSessionId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GameAccountOnlineNotification other) {
      if (other == null) {
        return;
      }
      if (other.HasGameAccountId) {
        if (!HasGameAccountId) {
          GameAccountId = new global::Bgs.Protocol.EntityId();
        }
        GameAccountId.MergeFrom(other.GameAccountId);
      }
      if (other.HasHost) {
        if (!HasHost) {
          Host = new global::Bgs.Protocol.ProcessId();
        }
        Host.MergeFrom(other.Host);
      }
      if (other.HasSessionId) {
        SessionId = other.SessionId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasGameAccountId) {
              GameAccountId = new global::Bgs.Protocol.EntityId();
            }
            input.ReadMessage(GameAccountId);
            break;
          }
          case 18: {
            if (!HasHost) {
              Host = new global::Bgs.Protocol.ProcessId();
            }
            input.ReadMessage(Host);
            break;
          }
          case 26: {
            SessionId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GameAccountOfflineNotification : pb::IMessage<GameAccountOfflineNotification> {
    private static readonly pb::MessageParser<GameAccountOfflineNotification> _parser = new pb::MessageParser<GameAccountOfflineNotification>(() => new GameAccountOfflineNotification());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GameAccountOfflineNotification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.GameUtilities.V1.GameUtilitiesServiceReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameAccountOfflineNotification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameAccountOfflineNotification(GameAccountOfflineNotification other) : this() {
      gameAccountId_ = other.HasGameAccountId ? other.gameAccountId_.Clone() : null;
      host_ = other.HasHost ? other.host_.Clone() : null;
      sessionId_ = other.sessionId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameAccountOfflineNotification Clone() {
      return new GameAccountOfflineNotification(this);
    }

    /// <summary>Field number for the "game_account_id" field.</summary>
    public const int GameAccountIdFieldNumber = 1;
    private global::Bgs.Protocol.EntityId gameAccountId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.EntityId GameAccountId {
      get { return gameAccountId_; }
      set {
        gameAccountId_ = value;
      }
    }
    /// <summary>Gets whether the game_account_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasGameAccountId {
      get { return gameAccountId_ != null; }
    }
    /// <summary>Clears the value of the game_account_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearGameAccountId() {
      gameAccountId_ = null;
    }

    /// <summary>Field number for the "host" field.</summary>
    public const int HostFieldNumber = 2;
    private global::Bgs.Protocol.ProcessId host_;
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.ProcessId Host {
      get { return host_; }
      set {
        host_ = value;
      }
    }
    /// <summary>Gets whether the host field is set</summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasHost {
      get { return host_ != null; }
    }
    /// <summary>Clears the value of the host field</summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearHost() {
      host_ = null;
    }

    /// <summary>Field number for the "session_id" field.</summary>
    public const int SessionIdFieldNumber = 3;
    private readonly static string SessionIdDefaultValue = "";

    private string sessionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionId {
      get { return sessionId_ ?? SessionIdDefaultValue; }
      set {
        sessionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "session_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSessionId {
      get { return sessionId_ != null; }
    }
    /// <summary>Clears the value of the "session_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSessionId() {
      sessionId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GameAccountOfflineNotification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GameAccountOfflineNotification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(GameAccountId, other.GameAccountId)) return false;
      if (!object.Equals(Host, other.Host)) return false;
      if (SessionId != other.SessionId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasGameAccountId) hash ^= GameAccountId.GetHashCode();
      if (HasHost) hash ^= Host.GetHashCode();
      if (HasSessionId) hash ^= SessionId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasGameAccountId) {
        output.WriteRawTag(10);
        output.WriteMessage(GameAccountId);
      }
      if (HasHost) {
        output.WriteRawTag(18);
        output.WriteMessage(Host);
      }
      if (HasSessionId) {
        output.WriteRawTag(26);
        output.WriteString(SessionId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasGameAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GameAccountId);
      }
      if (HasHost) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Host);
      }
      if (HasSessionId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GameAccountOfflineNotification other) {
      if (other == null) {
        return;
      }
      if (other.HasGameAccountId) {
        if (!HasGameAccountId) {
          GameAccountId = new global::Bgs.Protocol.EntityId();
        }
        GameAccountId.MergeFrom(other.GameAccountId);
      }
      if (other.HasHost) {
        if (!HasHost) {
          Host = new global::Bgs.Protocol.ProcessId();
        }
        Host.MergeFrom(other.Host);
      }
      if (other.HasSessionId) {
        SessionId = other.SessionId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasGameAccountId) {
              GameAccountId = new global::Bgs.Protocol.EntityId();
            }
            input.ReadMessage(GameAccountId);
            break;
          }
          case 18: {
            if (!HasHost) {
              Host = new global::Bgs.Protocol.ProcessId();
            }
            input.ReadMessage(Host);
            break;
          }
          case 26: {
            SessionId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetAllValuesForAttributeRequest : pb::IMessage<GetAllValuesForAttributeRequest> {
    private static readonly pb::MessageParser<GetAllValuesForAttributeRequest> _parser = new pb::MessageParser<GetAllValuesForAttributeRequest>(() => new GetAllValuesForAttributeRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetAllValuesForAttributeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.GameUtilities.V1.GameUtilitiesServiceReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAllValuesForAttributeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAllValuesForAttributeRequest(GetAllValuesForAttributeRequest other) : this() {
      _hasBits0 = other._hasBits0;
      attributeKey_ = other.attributeKey_;
      agentId_ = other.HasAgentId ? other.agentId_.Clone() : null;
      program_ = other.program_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAllValuesForAttributeRequest Clone() {
      return new GetAllValuesForAttributeRequest(this);
    }

    /// <summary>Field number for the "attribute_key" field.</summary>
    public const int AttributeKeyFieldNumber = 1;
    private readonly static string AttributeKeyDefaultValue = "";

    private string attributeKey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AttributeKey {
      get { return attributeKey_ ?? AttributeKeyDefaultValue; }
      set {
        attributeKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "attribute_key" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAttributeKey {
      get { return attributeKey_ != null; }
    }
    /// <summary>Clears the value of the "attribute_key" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAttributeKey() {
      attributeKey_ = null;
    }

    /// <summary>Field number for the "agent_id" field.</summary>
    public const int AgentIdFieldNumber = 2;
    private global::Bgs.Protocol.EntityId agentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.EntityId AgentId {
      get { return agentId_; }
      set {
        agentId_ = value;
      }
    }
    /// <summary>Gets whether the agent_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAgentId {
      get { return agentId_ != null; }
    }
    /// <summary>Clears the value of the agent_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAgentId() {
      agentId_ = null;
    }

    /// <summary>Field number for the "program" field.</summary>
    public const int ProgramFieldNumber = 5;
    private readonly static uint ProgramDefaultValue = 0;

    private uint program_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Program {
      get { if ((_hasBits0 & 1) != 0) { return program_; } else { return ProgramDefaultValue; } }
      set {
        _hasBits0 |= 1;
        program_ = value;
      }
    }
    /// <summary>Gets whether the "program" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasProgram {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "program" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearProgram() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetAllValuesForAttributeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetAllValuesForAttributeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AttributeKey != other.AttributeKey) return false;
      if (!object.Equals(AgentId, other.AgentId)) return false;
      if (Program != other.Program) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAttributeKey) hash ^= AttributeKey.GetHashCode();
      if (HasAgentId) hash ^= AgentId.GetHashCode();
      if (HasProgram) hash ^= Program.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasAttributeKey) {
        output.WriteRawTag(10);
        output.WriteString(AttributeKey);
      }
      if (HasAgentId) {
        output.WriteRawTag(18);
        output.WriteMessage(AgentId);
      }
      if (HasProgram) {
        output.WriteRawTag(45);
        output.WriteFixed32(Program);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAttributeKey) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AttributeKey);
      }
      if (HasAgentId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AgentId);
      }
      if (HasProgram) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetAllValuesForAttributeRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasAttributeKey) {
        AttributeKey = other.AttributeKey;
      }
      if (other.HasAgentId) {
        if (!HasAgentId) {
          AgentId = new global::Bgs.Protocol.EntityId();
        }
        AgentId.MergeFrom(other.AgentId);
      }
      if (other.HasProgram) {
        Program = other.Program;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AttributeKey = input.ReadString();
            break;
          }
          case 18: {
            if (!HasAgentId) {
              AgentId = new global::Bgs.Protocol.EntityId();
            }
            input.ReadMessage(AgentId);
            break;
          }
          case 45: {
            Program = input.ReadFixed32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetAllValuesForAttributeResponse : pb::IMessage<GetAllValuesForAttributeResponse> {
    private static readonly pb::MessageParser<GetAllValuesForAttributeResponse> _parser = new pb::MessageParser<GetAllValuesForAttributeResponse>(() => new GetAllValuesForAttributeResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetAllValuesForAttributeResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.GameUtilities.V1.GameUtilitiesServiceReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAllValuesForAttributeResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAllValuesForAttributeResponse(GetAllValuesForAttributeResponse other) : this() {
      attributeValue_ = other.attributeValue_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAllValuesForAttributeResponse Clone() {
      return new GetAllValuesForAttributeResponse(this);
    }

    /// <summary>Field number for the "attribute_value" field.</summary>
    public const int AttributeValueFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Bgs.Protocol.Variant> _repeated_attributeValue_codec
        = pb::FieldCodec.ForMessage(10, global::Bgs.Protocol.Variant.Parser);
    private readonly pbc::RepeatedField<global::Bgs.Protocol.Variant> attributeValue_ = new pbc::RepeatedField<global::Bgs.Protocol.Variant>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Bgs.Protocol.Variant> AttributeValue {
      get { return attributeValue_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetAllValuesForAttributeResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetAllValuesForAttributeResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!attributeValue_.Equals(other.attributeValue_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= attributeValue_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      attributeValue_.WriteTo(output, _repeated_attributeValue_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += attributeValue_.CalculateSize(_repeated_attributeValue_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetAllValuesForAttributeResponse other) {
      if (other == null) {
        return;
      }
      attributeValue_.Add(other.attributeValue_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            attributeValue_.AddEntriesFrom(input, _repeated_attributeValue_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RegisterUtilitiesRequest : pb::IMessage<RegisterUtilitiesRequest> {
    private static readonly pb::MessageParser<RegisterUtilitiesRequest> _parser = new pb::MessageParser<RegisterUtilitiesRequest>(() => new RegisterUtilitiesRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RegisterUtilitiesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.GameUtilities.V1.GameUtilitiesServiceReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegisterUtilitiesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegisterUtilitiesRequest(RegisterUtilitiesRequest other) : this() {
      _hasBits0 = other._hasBits0;
      attribute_ = other.attribute_.Clone();
      program_ = other.program_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegisterUtilitiesRequest Clone() {
      return new RegisterUtilitiesRequest(this);
    }

    /// <summary>Field number for the "attribute" field.</summary>
    public const int AttributeFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Bgs.Protocol.Attribute> _repeated_attribute_codec
        = pb::FieldCodec.ForMessage(10, global::Bgs.Protocol.Attribute.Parser);
    private readonly pbc::RepeatedField<global::Bgs.Protocol.Attribute> attribute_ = new pbc::RepeatedField<global::Bgs.Protocol.Attribute>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Bgs.Protocol.Attribute> Attribute {
      get { return attribute_; }
    }

    /// <summary>Field number for the "program" field.</summary>
    public const int ProgramFieldNumber = 2;
    private readonly static uint ProgramDefaultValue = 0;

    private uint program_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Program {
      get { if ((_hasBits0 & 1) != 0) { return program_; } else { return ProgramDefaultValue; } }
      set {
        _hasBits0 |= 1;
        program_ = value;
      }
    }
    /// <summary>Gets whether the "program" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasProgram {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "program" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearProgram() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RegisterUtilitiesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RegisterUtilitiesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!attribute_.Equals(other.attribute_)) return false;
      if (Program != other.Program) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= attribute_.GetHashCode();
      if (HasProgram) hash ^= Program.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      attribute_.WriteTo(output, _repeated_attribute_codec);
      if (HasProgram) {
        output.WriteRawTag(21);
        output.WriteFixed32(Program);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += attribute_.CalculateSize(_repeated_attribute_codec);
      if (HasProgram) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RegisterUtilitiesRequest other) {
      if (other == null) {
        return;
      }
      attribute_.Add(other.attribute_);
      if (other.HasProgram) {
        Program = other.Program;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            attribute_.AddEntriesFrom(input, _repeated_attribute_codec);
            break;
          }
          case 21: {
            Program = input.ReadFixed32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RegisterUtilitiesResponse : pb::IMessage<RegisterUtilitiesResponse> {
    private static readonly pb::MessageParser<RegisterUtilitiesResponse> _parser = new pb::MessageParser<RegisterUtilitiesResponse>(() => new RegisterUtilitiesResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RegisterUtilitiesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.GameUtilities.V1.GameUtilitiesServiceReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegisterUtilitiesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegisterUtilitiesResponse(RegisterUtilitiesResponse other) : this() {
      clientId_ = other.clientId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegisterUtilitiesResponse Clone() {
      return new RegisterUtilitiesResponse(this);
    }

    /// <summary>Field number for the "client_id" field.</summary>
    public const int ClientIdFieldNumber = 1;
    private readonly static string ClientIdDefaultValue = "";

    private string clientId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClientId {
      get { return clientId_ ?? ClientIdDefaultValue; }
      set {
        clientId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "client_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasClientId {
      get { return clientId_ != null; }
    }
    /// <summary>Clears the value of the "client_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearClientId() {
      clientId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RegisterUtilitiesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RegisterUtilitiesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClientId != other.ClientId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasClientId) hash ^= ClientId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasClientId) {
        output.WriteRawTag(10);
        output.WriteString(ClientId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasClientId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RegisterUtilitiesResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasClientId) {
        ClientId = other.ClientId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ClientId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UnregisterUtilitiesRequest : pb::IMessage<UnregisterUtilitiesRequest> {
    private static readonly pb::MessageParser<UnregisterUtilitiesRequest> _parser = new pb::MessageParser<UnregisterUtilitiesRequest>(() => new UnregisterUtilitiesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UnregisterUtilitiesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.GameUtilities.V1.GameUtilitiesServiceReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnregisterUtilitiesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnregisterUtilitiesRequest(UnregisterUtilitiesRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnregisterUtilitiesRequest Clone() {
      return new UnregisterUtilitiesRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UnregisterUtilitiesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UnregisterUtilitiesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UnregisterUtilitiesRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
